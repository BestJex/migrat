<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ymy.xxb.migrat.auth.shiro.mapper.BsUserMapper">
  <resultMap id="BaseResultMap" type="com.ymy.xxb.migrat.auth.shiro.entity.BsUserDO">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId"/>
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="real_name" jdbcType="VARCHAR" property="realName"/>
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="department_id" jdbcType="VARCHAR" property="departmentId" />
    <result column="level" jdbcType="VARCHAR" property="level"/>
    <result column="time_of_entry" jdbcType="TIMESTAMP" property="timeOfEntry" />
    <result column="work_number" jdbcType="VARCHAR" property="workNumber" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="correction_time" jdbcType="TIMESTAMP" property="correctionTime" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="modify_user" jdbcType="VARCHAR" property="modifyUser" />
  </resultMap>
	
	<sql id="Base_Column_List" >
        id, tenant_id,mobile, username, password, real_name, company_id, department_id,time_of_entry,
        work_number,avatar,correction_time,create_time,state,create_time,level,
        create_user, modify_time, modify_user
    </sql>
    
	<!-- 分页标签 -->
	<sql id="table_page">
		<if test="rowStart !=null  and  rowEnd !=null ">
			<![CDATA[LIMIT #{rowStart},#{rowEnd}]]>
		</if>
	</sql>
	
 	<insert id="insert" parameterType="com.ymy.xxb.migrat.auth.shiro.entity.BsUserDO"   useGeneratedKeys="true" keyProperty="id">
        insert into co_bs_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realName != null">
      	real_name,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="level != null">
      	level,
      </if>
      <if test="timeOfEntry != null">
        time_of_entry,
      </if>
      <if test="workNumber != null">
        work_number,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="correctionTime != null">
        correction_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="modifyUser != null">
        modify_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
      	#{realName,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
      	#{level,jdbcType=VARCHAR},
      </if>
      <if test="timeOfEntry != null">
        #{timeOfEntry,jdbcType=TIMESTAMP},
      </if>
      <if test="workNumber != null">
        #{workNumber,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="correctionTime != null">
        #{correctionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null">
        #{modifyUser,jdbcType=VARCHAR},
      </if>
    </trim>
    </insert>
    
    <update id="update" parameterType="com.ymy.xxb.migrat.auth.shiro.entity.BsUserDO" >
        update co_bs_user
	    <set>
	      <if test="id != null">
	        id = #{id,jdbcType=VARCHAR},
	      </if>
	      <if test="mobile != null">
	        mobile = #{mobile,jdbcType=VARCHAR},
	      </if>
	      <if test="username != null">
	        username = #{username,jdbcType=VARCHAR},
	      </if>
	      <if test="password != null">
	        password = #{password,jdbcType=VARCHAR},
	      </if>
	      <if test="realName != null">
	      	real_name =#{realName,jdbcType=VARCHAR},
	      </if>
	      <if test="companyId != null">
	        company_id = #{companyId,jdbcType=VARCHAR},
	      </if>
	      <if test="departmentId != null">
	        department_id = #{departmentId,jdbcType=VARCHAR},
	      </if>
	      <if test="level != null">
	      	level = #{level,jdbcType=VARCHAR},
	      </if>
	      <if test="timeOfEntry != null">
	        time_of_entry = #{timeOfEntry,jdbcType=TIMESTAMP},
	      </if>
	      <if test="workNumber != null">
	        work_number = #{workNumber,jdbcType=VARCHAR},
	      </if>
	      <if test="avatar != null">
	        avatar = #{avatar,jdbcType=VARCHAR},
	      </if>
	      <if test="correctionTime != null">
	        correction_time = #{correctionTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="state != null">
	        state = #{state,jdbcType=TINYINT},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="modifyTime != null">
	        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="modifyUser != null">
	        modify_user = #{modifyUser,jdbcType=VARCHAR},
	      </if>
	    </set>
      where id = #{id,jdbcType=VARCHAR}
    </update>
    
    <select id="findById" parameterType="java.lang.String" resultType="com.ymy.xxb.migrat.auth.shiro.entity.BsUserDO">
       SELECT
			dpt.category,
			dpt.`name` AS deptName,
     		<!--  u.password, -->
			u.id,
			u.tenant_id AS tenantId,
			u.mobile,
			u.username,
			u.real_name AS realName,
			u.company_id AS companyId,
			u.department_id AS departmentId,
			u.time_of_entry AS timeOfEntry,
			u.work_number AS workNumber,
			u.avatar,
			u.correction_time AS correctionTime,
			u.create_time AS correctionTime,
			u.state,
			u.create_time AS createTime,
			u.`level`,
			u.create_user AS createUser,
			u.modify_time AS modifyTime,
			u.modify_user AS modifyUser,
			ut.bsRoles AS bsRoles,
			ut.roleIds AS roleDropList
		FROM
			co_bs_user u
		LEFT JOIN co_department dpt
		ON u.department_id = dpt.id and dpt.state =1
		LEFT JOIN
		(
			SELECT
				ur.bs_user_id,
				GROUP_CONCAT(r.id) AS roleIds,
				GROUP_CONCAT(r.role_name) AS bsRoles
			FROM
				co_bs_role r
			INNER JOIN co_bs_user_role ur ON r.id = ur.bs_role_id
			AND r.state = 1
			GROUP BY
				ur.bs_user_id
		)ut ON u.id = ut.bs_user_id
		where u.id=#{id,jdbcType=VARCHAR}
    </select>
    
    <select id="getUserSimpleInfo" parameterType="map" resultType="com.ymy.xxb.migrat.auth.shiro.entity.BsUserDO">
    	SELECT id, tenant_id AS tenantId, username, mobile, `password`, company_id AS companyId FROM `co_bs_user`
    		where 1=1
    		<if test="id != null and id !=''">
    			AND id=#{id,jdbcType=VARCHAR}
    		</if>
    		<if test="mobile != null and mobile !=''">
    			AND mobile=#{mobile,jdbcType=VARCHAR}
    		</if>
    </select>
    
    <select id="select" parameterType="map" resultType="com.ymy.xxb.migrat.auth.shiro.entity.BsUserDO">
	        SELECT
				dpt.category,
				dpt.`name` AS deptName,
				u.id,
				u.tenant_id AS tenantId,
				u.mobile,
				u.username,
				u.real_name AS realName,
				u.company_id AS companyId,
				u.department_id AS departmentId,
				u.time_of_entry AS timeOfEntry,
				u.work_number AS workNumber,
				u.avatar,
				u.correction_time AS correctionTime,
				u.create_time AS correctionTime,
				u.state,
				u.create_time AS createTime,
				u.`level`,
				u.create_user AS createUser,
				u.modify_time AS modifyTime,
				u.modify_user AS modifyUser,
				ut.bsRoles AS bsRoles,
				ut.roleIds AS roleDropList
			FROM
				co_bs_user u
			LEFT JOIN co_department dpt
			ON u.department_id = dpt.id and dpt.state =1
			LEFT JOIN
			(
				SELECT
					ur.bs_user_id,
					GROUP_CONCAT(r.id) AS roleIds,
					GROUP_CONCAT(r.role_name) AS bsRoles
				FROM
					co_bs_role r
				INNER JOIN co_bs_user_role ur ON r.id = ur.bs_role_id
				AND r.state = 1
				GROUP BY
					ur.bs_user_id
			)ut ON u.id = ut.bs_user_id
	        where 1=1
        	<if test="id != null and id !=''" >
                and u.id=#{id,jdbcType=VARCHAR}
            </if>
            <if test="mobile != null and mobile !=''" >
                and u.mobile like concat('%', #{mobile}, '%')
            </if>
            <if test="username != null and username !=''" >
                and u.username like concat('%', #{username}, '%')
            </if>
            <if test="state != null and state !=''" >
                and u.state=#{state,jdbcType=TINYINT}
      		</if>
      		<if test="realName != null and realName != ''">
      			and u.real_name like concat('%', #{realName}, '%')
      		</if>
      	<include refid="table_page" />
    </select>
	
	<select id="count" resultType="long" parameterType="map">
		SELECT count(*)
		from co_bs_user
        where 1=1
        	<if test="id != null and id !=''" >
                and id=#{id,jdbcType=VARCHAR}
            </if>
            <if test="mobile != null and mobile !=''" >
                and mobile like concat('%', #{mobile}, '%')
            </if>
            <if test="username != null and username !=''" >
                and username like concat('%', #{username}, '%')
            </if>
            <if test="state != null and state !=''" >
                and state=#{state,jdbcType=TINYINT}
      		</if>
      		<if test="realName != null and realName != ''">
      			and real_name like concat('%', #{realName}, '%')
      		</if>
	</select>
	
	<update id="logicDelete" parameterType="java.lang.String">
		update co_bs_user set state=0 , modify_time=now() where id=#{id,jdbcType=VARCHAR}
	</update>
	
	<delete id="deleteUser" parameterType="java.lang.String">
		delete from co_bs_user where id=#{id,jdbcType=VARCHAR}
	</delete>
	
	<!-- 根据手机号或用户名查询用户信息 -->
	<select id="findByUsernameOrMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
  			<include refid="Base_Column_List"/>
        from co_bs_user
        <!-- where username =#{usernameOrMobile,jdbcType=VARCHAR} or mobile =#{usernameOrMobile, jdbcType=VARCHAR} -->
        where mobile =#{usernameOrMobile, jdbcType=VARCHAR}
	</select>
	
	<!-- 查询用户角色信息 -->
	<select id="findBsRoles" parameterType="java.lang.String" resultType="com.ymy.xxb.migrat.auth.shiro.entity.BsRoleDO">
		SELECT DISTINCT r.id AS id , r.role_code AS roleCode , r.role_name AS roleName,r.state AS state from co_bs_role r
		LEFT JOIN co_bs_user_role ur 
		ON r.id = ur.bs_role_id and r.state = 1
		LEFT JOIN co_bs_user u
		ON u.id = ur.bs_user_id and u.state = 1
		where u.id=#{id,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据角色ID获取权限信息 -->
	<select id="findBsPermissions" parameterType="java.lang.String" resultType="java.lang.String">
  		SELECT
            m.perms
        FROM
            co_bs_role r
        LEFT JOIN co_bs_user_role ur ON (r.id = ur.bs_role_id)
        LEFT JOIN co_bs_user u ON (u.id = ur.bs_user_id)
        LEFT JOIN co_bs_role_menu rm ON (rm.bs_role_id = r.id)
        LEFT JOIN co_bs_menu m ON (m.id = rm.bs_menu_id)
        WHERE 
			ur.bs_role_id=#{id,jdbcType=VARCHAR}
        AND m.perms is not null
        AND m.perms &lt;&gt; '';
	</select>
	
	<select id="selectSimpleUsers" resultType="java.util.HashMap">
		SELECT mobile , tenant_id AS tenantId from co_bs_user where mobile is not NULL and tenant_id is not NULL
	</select>
</mapper>